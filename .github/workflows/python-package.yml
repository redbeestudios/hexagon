# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test & release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev --ignore-pipfile

      - name: Unit tests
        run: |
          pipenv run pytest -svv tests/

      - name: Setup e2e dependencies
        run: |
          python -m pip install wheel
          python setup.py sdist bdist_wheel
          python -m pip install --find-links=./dist hexagon

      - name: e2e tests
        run: |
          pipenv run pytest -svv e2e/

      - uses: actions/upload-artifact@v2
        with:
          name: hexagon
          path: dist/*.tar.gz

  i18n:
    name: i18n
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install gettext
        run: sudo apt-get install -y gettext

      - name: add matcher
        run: |
          echo "::add-matcher::.github/i18n-problem-matcher.json"

      - name: build locales
        run: |
          pygettext3 -d hexagon -o locales/hexagon.pot hexagon
          for locale in locales/**/LC_MESSAGES/hexagon.po ; do
              l=$(echo "$locale" | cut -d/ -f2)
              echo "merging messages to $locale"
              msgmerge --update "$locale" locales/hexagon.pot
              echo "formatting messages to $locale"
              msgfmt -o "locales/$l/LC_MESSAGES/hexagon.mo" "$locale"
          done

      - name: validate translations
        run: |
          for locale in locales/**/LC_MESSAGES/hexagon.po; do
            grep -Hin 'msgstr ""' "$locale" >>errors.txt
          done

          if [ -s errors.txt ]; then
            while IFS="" read -r p || [ -n "$p" ]; do
              # the first match is always empty
              if [[ "$p" != *".po:6:"* ]]; then printf '%s\n' "$p:translation string should not be empty"; fi
            done <errors.txt
            exit 1
          else
            echo "all strings have a translation"
            exit 0
          fi

      - name: remove matcher
        run: |
          echo "::remove-matcher owner=hexagon-i18n::"

  release:
    if: ${{ github.event_name != 'pull_request' && github.event_name != 'pull_request_target' }}

    runs-on: ubuntu-latest
    needs: [test, i18n]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#          pypi_token: ${{ secrets.PYPI_TOKEN }}